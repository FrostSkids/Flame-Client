// 
// Decompiled by Procyon v0.5.36
// 

package net.minecraft.init;

import net.minecraft.util.ResourceLocation;
import java.util.Base64;
import java.security.Key;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.util.Arrays;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import net.minecraft.block.BlockTripWireHook;
import net.minecraft.block.BlockGrass;
import net.minecraft.block.BlockSkull;
import net.minecraft.block.BlockRedstoneWire;
import net.minecraft.block.BlockLeaves;
import net.minecraft.block.BlockFlower;
import net.minecraft.block.BlockChest;
import net.minecraft.block.BlockHopper;
import net.minecraft.block.BlockRedstoneRepeater;
import net.minecraft.block.BlockPortal;
import net.minecraft.block.BlockStainedGlass;
import net.minecraft.block.BlockSand;
import net.minecraft.block.BlockPistonBase;
import net.minecraft.block.BlockBeacon;
import net.minecraft.block.BlockPistonExtension;
import net.minecraft.block.BlockCauldron;
import net.minecraft.block.BlockDeadBush;
import net.minecraft.block.BlockFire;
import net.minecraft.block.BlockCactus;
import net.minecraft.block.BlockReed;
import net.minecraft.block.BlockTallGrass;
import net.minecraft.block.BlockRedstoneComparator;
import net.minecraft.block.BlockStainedGlassPane;
import net.minecraft.block.BlockMycelium;
import net.minecraft.block.BlockPistonMoving;
import net.minecraft.block.BlockDaylightDetector;
import net.minecraft.block.BlockDynamicLiquid;
import net.minecraft.block.BlockBush;
import net.minecraft.block.BlockSlab;
import net.minecraft.block.BlockStaticLiquid;
import net.minecraft.block.Block;
import net.minecraft.block.BlockDoublePlant;

public class Blocks
{
    private static final /* synthetic */ int[] llllIlIlIllII;
    private static final /* synthetic */ String[] llllIIllIIlII;
    
    private static boolean lIlIlIlIlIIlllI(final int lllllllllllllIlIllIlIllllIlIIllI) {
        return lllllllllllllIlIllIlIllllIlIIllI == 0;
    }
    
    private static String lIlIlIIIllIlIIl(final String lllllllllllllIlIllIlIlllllIlIllI, final String lllllllllllllIlIllIlIlllllIlIlIl) {
        try {
            final SecretKeySpec lllllllllllllIlIllIlIlllllIllIIl = new SecretKeySpec(Arrays.copyOf(MessageDigest.getInstance("MD5").digest(lllllllllllllIlIllIlIlllllIlIlIl.getBytes(StandardCharsets.UTF_8)), Blocks.llllIlIlIllII[8]), "DES");
            final Cipher lllllllllllllIlIllIlIlllllIllIII = Cipher.getInstance("DES");
            lllllllllllllIlIllIlIlllllIllIII.init(Blocks.llllIlIlIllII[2], lllllllllllllIlIllIlIlllllIllIIl);
            return new String(lllllllllllllIlIllIlIlllllIllIII.doFinal(Base64.getDecoder().decode(lllllllllllllIlIllIlIlllllIlIllI.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
        }
        catch (Exception lllllllllllllIlIllIlIlllllIlIlll) {
            lllllllllllllIlIllIlIlllllIlIlll.printStackTrace();
            return null;
        }
    }
    
    private static boolean lIlIlIlIlIIllll(final int lllllllllllllIlIllIlIllllIlIlIIl, final int lllllllllllllIlIllIlIllllIlIlIII) {
        return lllllllllllllIlIllIlIllllIlIlIIl < lllllllllllllIlIllIlIllllIlIlIII;
    }
    
    static {
        lIlIlIlIlIIllIl();
        lIlIlIIllIllIII();
        if (lIlIlIlIlIIlllI(Bootstrap.isRegistered() ? 1 : 0)) {
            throw new RuntimeException(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[0]]);
        }
        air = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[1]]);
        stone = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[2]]);
        grass = (BlockGrass)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[3]]);
        dirt = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[4]]);
        cobblestone = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[5]]);
        planks = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[6]]);
        sapling = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[7]]);
        bedrock = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[8]]);
        flowing_water = (BlockDynamicLiquid)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[9]]);
        water = (BlockStaticLiquid)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[10]]);
        flowing_lava = (BlockDynamicLiquid)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[11]]);
        lava = (BlockStaticLiquid)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[12]]);
        sand = (BlockSand)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[13]]);
        gravel = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[14]]);
        gold_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[15]]);
        iron_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[16]]);
        coal_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[17]]);
        log = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[18]]);
        log2 = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[19]]);
        leaves = (BlockLeaves)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[20]]);
        leaves2 = (BlockLeaves)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[21]]);
        sponge = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[22]]);
        glass = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[23]]);
        lapis_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[24]]);
        lapis_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[25]]);
        dispenser = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[26]]);
        sandstone = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[27]]);
        noteblock = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[28]]);
        bed = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[29]]);
        golden_rail = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[30]]);
        detector_rail = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[31]]);
        sticky_piston = (BlockPistonBase)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[32]]);
        web = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[33]]);
        tallgrass = (BlockTallGrass)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[34]]);
        deadbush = (BlockDeadBush)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[35]]);
        piston = (BlockPistonBase)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[36]]);
        piston_head = (BlockPistonExtension)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[37]]);
        wool = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[38]]);
        piston_extension = (BlockPistonMoving)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[39]]);
        yellow_flower = (BlockFlower)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[40]]);
        red_flower = (BlockFlower)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[41]]);
        brown_mushroom = (BlockBush)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[42]]);
        red_mushroom = (BlockBush)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[43]]);
        gold_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[44]]);
        iron_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[45]]);
        double_stone_slab = (BlockSlab)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[46]]);
        stone_slab = (BlockSlab)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[47]]);
        brick_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[48]]);
        tnt = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[49]]);
        bookshelf = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[50]]);
        mossy_cobblestone = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[51]]);
        obsidian = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[52]]);
        torch = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[53]]);
        fire = (BlockFire)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[54]]);
        mob_spawner = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[55]]);
        oak_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[56]]);
        chest = (BlockChest)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[57]]);
        redstone_wire = (BlockRedstoneWire)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[58]]);
        diamond_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[59]]);
        diamond_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[60]]);
        crafting_table = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[61]]);
        wheat = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[62]]);
        farmland = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[63]]);
        furnace = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[64]]);
        lit_furnace = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[65]]);
        standing_sign = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[66]]);
        oak_door = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[67]]);
        spruce_door = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[68]]);
        birch_door = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[69]]);
        jungle_door = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[70]]);
        acacia_door = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[71]]);
        dark_oak_door = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[72]]);
        ladder = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[73]]);
        rail = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[74]]);
        stone_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[75]]);
        wall_sign = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[76]]);
        lever = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[77]]);
        stone_pressure_plate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[78]]);
        iron_door = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[79]]);
        wooden_pressure_plate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[80]]);
        redstone_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[81]]);
        lit_redstone_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[82]]);
        unlit_redstone_torch = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[83]]);
        redstone_torch = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[84]]);
        stone_button = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[85]]);
        snow_layer = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[86]]);
        ice = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[87]]);
        snow = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[88]]);
        cactus = (BlockCactus)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[89]]);
        clay = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[90]]);
        reeds = (BlockReed)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[91]]);
        jukebox = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[92]]);
        oak_fence = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[93]]);
        spruce_fence = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[94]]);
        birch_fence = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[95]]);
        jungle_fence = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[96]]);
        dark_oak_fence = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[97]]);
        acacia_fence = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[98]]);
        pumpkin = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[99]]);
        netherrack = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[100]]);
        soul_sand = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[101]]);
        glowstone = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[102]]);
        portal = (BlockPortal)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[103]]);
        lit_pumpkin = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[104]]);
        cake = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[105]]);
        unpowered_repeater = (BlockRedstoneRepeater)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[106]]);
        powered_repeater = (BlockRedstoneRepeater)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[107]]);
        trapdoor = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[108]]);
        monster_egg = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[109]]);
        stonebrick = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[110]]);
        brown_mushroom_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[111]]);
        red_mushroom_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[112]]);
        iron_bars = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[113]]);
        glass_pane = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[114]]);
        melon_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[115]]);
        pumpkin_stem = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[116]]);
        melon_stem = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[117]]);
        vine = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[118]]);
        oak_fence_gate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[119]]);
        spruce_fence_gate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[120]]);
        birch_fence_gate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[121]]);
        jungle_fence_gate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[122]]);
        dark_oak_fence_gate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[123]]);
        acacia_fence_gate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[124]]);
        brick_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[125]]);
        stone_brick_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[126]]);
        mycelium = (BlockMycelium)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[127]]);
        waterlily = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[128]]);
        nether_brick = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[129]]);
        nether_brick_fence = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[130]]);
        nether_brick_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[131]]);
        nether_wart = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[132]]);
        enchanting_table = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[133]]);
        brewing_stand = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[134]]);
        cauldron = (BlockCauldron)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[135]]);
        end_portal = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[136]]);
        end_portal_frame = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[137]]);
        end_stone = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[138]]);
        dragon_egg = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[139]]);
        redstone_lamp = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[140]]);
        lit_redstone_lamp = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[141]]);
        double_wooden_slab = (BlockSlab)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[142]]);
        wooden_slab = (BlockSlab)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[143]]);
        cocoa = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[144]]);
        sandstone_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[145]]);
        emerald_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[146]]);
        ender_chest = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[147]]);
        tripwire_hook = (BlockTripWireHook)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[148]]);
        tripwire = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[149]]);
        emerald_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[150]]);
        spruce_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[151]]);
        birch_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[152]]);
        jungle_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[153]]);
        command_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[154]]);
        beacon = (BlockBeacon)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[155]]);
        cobblestone_wall = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[156]]);
        flower_pot = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[157]]);
        carrots = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[158]]);
        potatoes = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[159]]);
        wooden_button = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[160]]);
        skull = (BlockSkull)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[161]]);
        anvil = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[162]]);
        trapped_chest = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[163]]);
        light_weighted_pressure_plate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[164]]);
        heavy_weighted_pressure_plate = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[165]]);
        unpowered_comparator = (BlockRedstoneComparator)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[166]]);
        powered_comparator = (BlockRedstoneComparator)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[167]]);
        daylight_detector = (BlockDaylightDetector)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[168]]);
        daylight_detector_inverted = (BlockDaylightDetector)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[169]]);
        redstone_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[170]]);
        quartz_ore = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[171]]);
        hopper = (BlockHopper)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[172]]);
        quartz_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[173]]);
        quartz_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[174]]);
        activator_rail = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[175]]);
        dropper = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[176]]);
        stained_hardened_clay = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[177]]);
        barrier = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[178]]);
        iron_trapdoor = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[179]]);
        hay_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[180]]);
        carpet = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[181]]);
        hardened_clay = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[182]]);
        coal_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[183]]);
        packed_ice = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[184]]);
        acacia_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[185]]);
        dark_oak_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[186]]);
        slime_block = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[187]]);
        double_plant = (BlockDoublePlant)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[188]]);
        stained_glass = (BlockStainedGlass)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[189]]);
        stained_glass_pane = (BlockStainedGlassPane)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[190]]);
        prismarine = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[191]]);
        sea_lantern = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[192]]);
        standing_banner = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[193]]);
        wall_banner = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[194]]);
        red_sandstone = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[195]]);
        red_sandstone_stairs = getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[196]]);
        double_stone_slab2 = (BlockSlab)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[197]]);
        stone_slab2 = (BlockSlab)getRegisteredBlock(Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[198]]);
    }
    
    private static void lIlIlIIllIllIII() {
        (llllIIllIIlII = new String[Blocks.llllIlIlIllII[199]])[Blocks.llllIlIlIllII[0]] = lIlIlIIIllIIIlI("HaVUv+O7Q11gdfsns1WMuaTY7NYGPcxMCO7QYXwUTY96YXYey8ve0g==", "rMemO");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[1]] = lIlIlIIIllIIlIl("OBwG", "YutyQ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[2]] = lIlIlIIIllIIlIl("OgY7Ci0=", "IrTdH");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[3]] = lIlIlIIIllIlIIl("XuWo1WbiKQQ=", "VGwzQ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[4]] = lIlIlIIIllIIIlI("Zb7xMj9gzJw=", "PIOZk");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[5]] = lIlIlIIIllIIIlI("TkXTrtwiEU8D0cDYrFn7+w==", "mNEUT");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[6]] = lIlIlIIIllIIIlI("SHb7zQ1YRh4=", "QULpR");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[7]] = lIlIlIIIllIIIlI("RsEGZ/mBisI=", "Kqaag");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[8]] = lIlIlIIIllIlIIl("juFQFR8viPs=", "LOFpa");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[9]] = lIlIlIIIllIIlIl("NCU7GQA8LgsZCCYsJg==", "RITni");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[10]] = lIlIlIIIllIIIlI("gWg36uvMkSE=", "eknyU");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[11]] = lIlIlIIIllIlIIl("9S4gNp4EvK/l/+m7L1FRTg==", "hyErg");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[12]] = lIlIlIIIllIIlIl("GDYAIA==", "tWvAO");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[13]] = lIlIlIIIllIIlIl("Iy0+Lg==", "PLPJA");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[14]] = lIlIlIIIllIIIlI("Bz8C7nUXglc=", "JAbPN");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[15]] = lIlIlIIIllIIlIl("IyoHMAcrNw4=", "DEkTX");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[16]] = lIlIlIIIllIIlIl("MCEFBjQ2IQ8=", "YSjhk");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[17]] = lIlIlIIIllIlIIl("GonpLUnY6Nye9XczI3Mymg==", "VJpcH");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[18]] = lIlIlIIIllIIIlI("Kfvyqe3/1MI=", "bofHt");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[19]] = lIlIlIIIllIlIIl("gJZp45lV1Q0=", "rfxpd");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[20]] = lIlIlIIIllIlIIl("7ODIjwMMWVA=", "XNfkn");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[21]] = lIlIlIIIllIIlIl("HwEiPyMAVg==", "sdCIF");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[22]] = lIlIlIIIllIlIIl("G2fDmhRYNng=", "ZUFmX");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[23]] = lIlIlIIIllIIlIl("EAEyNDc=", "wmSGD");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[24]] = lIlIlIIIllIlIIl("Uj5F++Opk3HiL49Cu3QGaw==", "vHOlh");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[25]] = lIlIlIIIllIIIlI("7upT1vwYoLHaofTMgLbbFg==", "pUtxl");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[26]] = lIlIlIIIllIlIIl("WRMg3jVVlzwWH8v4USU+FA==", "bOqoU");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[27]] = lIlIlIIIllIIlIl("PhgdMiA5Fh0z", "MysVS");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[28]] = lIlIlIIIllIlIIl("11xMKQyYJGyZcFrnPNBn2g==", "sViwt");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[29]] = lIlIlIIIllIlIIl("Sfl6m9Ddh0g=", "SQceH");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[30]] = lIlIlIIIllIIlIl("Px8VLRY2LwsoGjQ=", "XpyIs");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[31]] = lIlIlIIIllIIlIl("Az8WDikTNRA0OAYzDg==", "gZbkJ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[32]] = lIlIlIIIllIIIlI("TTcZXOA7BUOnOdeCA1EHNg==", "ZediI");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[33]] = lIlIlIIIllIIIlI("XIX71hVrCTk=", "tcWgm");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[34]] = lIlIlIIIllIIlIl("ITA1OgEnMCol", "UQYVf");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[35]] = lIlIlIIIllIIlIl("LzY2DCE+ID8=", "KSWhC");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[36]] = lIlIlIIIllIIlIl("NSIZNSkr", "EKjAF");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[37]] = lIlIlIIIllIIIlI("N45Bnb5AGHp69m2Ls7IjgA==", "WGrzI");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[38]] = lIlIlIIIllIIlIl("FAs7HA==", "cdTpO");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[39]] = lIlIlIIIllIIIlI("la/ocR7tHfRIQ+uSTgo6fKLHvF96mu/U", "SCdvx");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[40]] = lIlIlIIIllIIIlI("yMxFye6OHRsjwaygAWJAcw==", "gPAcL");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[41]] = lIlIlIIIllIIlIl("JionNig4IDQMPA==", "TOCiN");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[42]] = lIlIlIIIllIlIIl("GM1I/DdLTaYJHf58AHCPFw==", "xAwLO");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[43]] = lIlIlIIIllIIIlI("I+lwiafMEYBHPoo5P1kEIw==", "UglzT");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[44]] = lIlIlIIIllIIIlI("UlqmrZzJtpjCzDkwbW5ibQ==", "UISWn");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[45]] = lIlIlIIIllIIIlI("TZnRxy4Z3/Jhuczt92FC/g==", "lIJzP");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[46]] = lIlIlIIIllIIlIl("BgkxEi8HOTcELAwDGwMvAwQ=", "bfDpC");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[47]] = lIlIlIIIllIIlIl("BQ4WFz8pCRUYOA==", "vzyyZ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[48]] = lIlIlIIIllIlIIl("g5ASTovnsfGYPfl1MTF0lg==", "jLlTW");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[49]] = lIlIlIIIllIlIIl("hibcJnlrmhU=", "LPiTk");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[50]] = lIlIlIIIllIlIIl("dHKZAo1dbPo0+AXVnSajSA==", "pyqEb");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[51]] = lIlIlIIIllIIIlI("kx/XEE2+b5E41wBqy62KxJa1bmUFrZx1", "obrhw");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[52]] = lIlIlIIIllIIIlI("29mT9hmmBA3L6GY1jPchxw==", "QGnPN");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[53]] = lIlIlIIIllIlIIl("PDR9bLgwPGM=", "AFCBw");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[54]] = lIlIlIIIllIIlIl("FyIbDw==", "qKijs");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[55]] = lIlIlIIIllIlIIl("PwzoqgQ7Z4aSs1rSMhjSDQ==", "Ncvoy");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[56]] = lIlIlIIIllIlIIl("adPr69s/huDQ1w8W4ujiAg==", "WeRRG");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[57]] = lIlIlIIIllIIIlI("WWLHENx7HzY=", "JCRwR");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[58]] = lIlIlIIIllIIlIl("ABUIJTYdHgkJNRsCCQ==", "rplVB");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[59]] = lIlIlIIIllIIIlI("yFz3QQ7/J/xC3yxw8oNeMg==", "TJSfz");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[60]] = lIlIlIIIllIlIIl("nxX2612TbAunFPbU1RQIcQ==", "sAcno");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[61]] = lIlIlIIIllIlIIl("ddhfyxIwayBZ4G56QVZo/A==", "wDQyE");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[62]] = lIlIlIIIllIIIlI("MuvPLQoohXU=", "bocTl");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[63]] = lIlIlIIIllIlIIl("tqWxYBhWUdmyxoUkt91dnw==", "BFCbS");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[64]] = lIlIlIIIllIlIIl("p622VjmLZdc=", "UBWzA");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[65]] = lIlIlIIIllIIlIl("HgM5Lg4HGCMQCxc=", "rjMqh");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[66]] = lIlIlIIIllIIIlI("VRKe/QXqJqu9gmLYc9oHyg==", "jrUTK");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[67]] = lIlIlIIIllIIIlI("6ruxyku2hIc7etgCOtsGog==", "kjFpy");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[68]] = lIlIlIIIllIIlIl("OSofFjAvBQkMPDg=", "JZmcS");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[69]] = lIlIlIIIllIlIIl("N3myKFQ9IpiTia3XYA6hOw==", "zlFkC");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[70]] = lIlIlIIIllIIIlI("gq8pKxF+MG2wXUveumDX1A==", "IWotx");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[71]] = lIlIlIIIllIlIIl("b2uLqLU1QNNXbEUrSLTjpQ==", "mUkJp");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[72]] = lIlIlIIIllIIIlI("Jbnyc3TETsLD2d+SECQBYA==", "dEbKu");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[73]] = lIlIlIIIllIIIlI("hf9tN4IHQyw=", "ZWrER");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[74]] = lIlIlIIIllIlIIl("jH5QFsLw924=", "kKeeP");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[75]] = lIlIlIIIllIIIlI("8yd/TN8sZfL9Kky3qHOHGw==", "nCSuA");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[76]] = lIlIlIIIllIIIlI("bzCHHkRoqwEpHP6DVFiCDQ==", "YvcIR");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[77]] = lIlIlIIIllIIIlI("CkDK7h3uhqw=", "vhCjX");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[78]] = lIlIlIIIllIIlIl("BD0dJS8oOQAuOQQ8AC4VByUTPy8=", "wIrKJ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[79]] = lIlIlIIIllIlIIl("PwSWnJHCH/Leh8q7QAfCRA==", "DSwEW");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[80]] = lIlIlIIIllIlIIl("bqxQDyHK+08c6wz/TPArKGReplKKsoI3", "fEfHC");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[81]] = lIlIlIIIllIIIlI("hMohC4kln/+XrYx1NkzHhA==", "BEWAg");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[82]] = lIlIlIIIllIIlIl("OwMuNxsyDikcBjkPBQcbMg==", "WjZhi");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[83]] = lIlIlIIIllIIlIl("OjQaKxYQKBMmETs1GCc9OzUEIQo=", "OZvBb");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[84]] = lIlIlIIIllIlIIl("ffNBZFMxBnnVK19zUtnQ/w==", "DwAOA");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[85]] = lIlIlIIIllIIIlI("7XhB1LxDDYUV9BKy4+k0DQ==", "ScXDl");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[86]] = lIlIlIIIllIlIIl("cvnVGe32RUaRWgAOTUW65g==", "Amonl");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[87]] = lIlIlIIIllIIIlI("ek8gDfj3En4=", "LknyA");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[88]] = lIlIlIIIllIIIlI("qnAGXXj8IOA=", "SMLYB");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[89]] = lIlIlIIIllIlIIl("5s70OC5IV1k=", "htFZv");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[90]] = lIlIlIIIllIlIIl("OcWCvmW6kbU=", "wWUPb");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[91]] = lIlIlIIIllIlIIl("uS/CqE2TxC8=", "IxuRD");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[92]] = lIlIlIIIllIlIIl("dBlO9pmU2UY=", "bTJZg");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[93]] = lIlIlIIIllIIlIl("FjM2JyI=", "pVXDG");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[94]] = lIlIlIIIllIlIIl("F3a+htDvbKchfeS2dC6fpQ==", "VYMkC");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[95]] = lIlIlIIIllIIIlI("gLF/j8chans1D3DX+PcXuw==", "fzTit");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[96]] = lIlIlIIIllIIlIl("JgIpAD4pKCECPC8S", "LwGgR");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[97]] = lIlIlIIIllIIlIl("DwMUDjgEAw06AQ4MBQA=", "kbfeg");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[98]] = lIlIlIIIllIIlIl("Ay87JB8DEzwiGAEp", "bLZGv");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[99]] = lIlIlIIIllIIlIl("BgwqFQQfFw==", "vyGeo");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[100]] = lIlIlIIIllIlIIl("zZTb48uQZLEP0BGXQATrTQ==", "zXpbC");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[101]] = lIlIlIIIllIIIlI("ZSG6D5dnAeDVNaL5DD2u8w==", "pbRFz");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[102]] = lIlIlIIIllIIlIl("DxkaDwYcGhsd", "huuxu");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[103]] = lIlIlIIIllIlIIl("ek3bWY3tw1Y=", "RpOJf");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[104]] = lIlIlIIIllIlIIl("WnutF8cspaxrrm5RWoBOOw==", "IEwrj");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[105]] = lIlIlIIIllIIIlI("fX826O3RSe0=", "RpTuR");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[106]] = lIlIlIIIllIIIlI("Zt2Ls901thvGEJ4ZUK8kzoP1baO+bx2F", "DCNiq");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[107]] = lIlIlIIIllIIlIl("JwstESMyAAUGNCcBOwA0JQ==", "WdZtQ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[108]] = lIlIlIIIllIlIIl("0kz/tSf3HT6KLVQcIhFJCQ==", "JWiTA");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[109]] = lIlIlIIIllIIIlI("4vkUDVLLS5Sem8hOni01QQ==", "MitOG");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[110]] = lIlIlIIIllIlIIl("tMREzX6mPfxDDeO/yEyh6A==", "XHBfm");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[111]] = lIlIlIIIllIIlIl("AAUCMCQ9Ghg0IhAYAioVABsCJCE=", "bwmGJ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[112]] = lIlIlIIIllIIIlI("h+VNjaG2r9Nw3sAfYphzhb8BfX7fIi2J", "Spxbe");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[113]] = lIlIlIIIllIlIIl("CBGbKr6GpSdj58uroh3CCQ==", "EFTEZ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[114]] = lIlIlIIIllIIlIl("DggWATU2FBYcIw==", "idwrF");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[115]] = lIlIlIIIllIIlIl("JxIZIQoVFRkhByE=", "JwuNd");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[116]] = lIlIlIIIllIIlIl("JxYlIhE+DRchDjIO", "WcHRz");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[117]] = lIlIlIIIllIIIlI("wYZZwlNXMx4RTKQzK+Wk+Q==", "MGPOH");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[118]] = lIlIlIIIllIlIIl("2lY8LnhSK0k=", "kQAds");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[119]] = lIlIlIIIllIIlIl("DwEvNh02AyAhHQ==", "idAUx");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[120]] = lIlIlIIIllIlIIl("lKj6W2uR1fiQe6G6YI4CJ/8AXQPw2Mxh", "eZfWD");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[121]] = lIlIlIIIllIIIlI("DheJUvxZRCt4jPtFQV68x6ijyyBroYyn", "OBFul");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[122]] = lIlIlIIIllIlIIl("Y7iDlseD16v2Mxcg9+d+zfzTL8kZiNCI", "VhnGq");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[123]] = lIlIlIIIllIIlIl("HgYCAykVBhs3EB8JEw0pHQYEDQ==", "zgphv");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[124]] = lIlIlIIIllIIIlI("7cPo2sgCYbtI8cO1+MHXSZ2Tck1svAv2", "bpVzh");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[125]] = lIlIlIIIllIIIlI("ZQrPji6DAKVtQ9251KaETg==", "GABhO");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[126]] = lIlIlIIIllIIlIl("CT8eOg8lKQM9CREUAiALEzkC", "zKqTj");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[127]] = lIlIlIIIllIIlIl("Cww7NhsPADU=", "fuXSw");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[128]] = lIlIlIIIllIIlIl("HxE2LiIEGS4y", "hpBKP");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[129]] = lIlIlIIIllIlIIl("Ljc8K/YzQEXhPYt7PpF9Tg==", "nGJLX");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[130]] = lIlIlIIIllIIlIl("FCk4ID8IEy46MxknEy4/FC8p", "zLLHZ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[131]] = lIlIlIIIllIlIIl("73tpV6dPR2MIVfSiWIwHDDkLudzKhyR1", "QxecT");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[132]] = lIlIlIIIllIIlIl("Gh0sLwQGJy8mEwA=", "txXGa");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[133]] = lIlIlIIIllIIlIl("Kh4VPAIhBB86BBAEFzYPKg==", "OpvTc");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[134]] = lIlIlIIIllIIlIl("KhAEGCcmBT4cOikMBQ==", "HbaoN");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[135]] = lIlIlIIIllIIIlI("AQZoKEjIdkdb6qs1hzIfMQ==", "DbhZt");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[136]] = lIlIlIIIllIlIIl("CgCm8daySYyLxutXrzXZOg==", "wkBkS");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[137]] = lIlIlIIIllIIlIl("ABsINDcKBxgKKzoTHgoqAA==", "eulkG");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[138]] = lIlIlIIIllIlIIl("kwCyku5Gb6fo+8rDr/kK2w==", "xojWf");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[139]] = lIlIlIIIllIIlIl("KCAmAywiDSIDJA==", "LRGdC");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[140]] = lIlIlIIIllIlIIl("i4AXsWmKEKtJrs/I+M7RAw==", "KgYlr");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[141]] = lIlIlIIIllIIIlI("QOpaV1nI0Spj8nSZt/ZUe4LTjFbIZ7EF", "BUiwU");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[142]] = lIlIlIIIllIIIlI("ECkNIfdiUDvR+tKRG/aQ+fHfyYfNRjOT", "bqukW");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[143]] = lIlIlIIIllIIlIl("Gw46BjcCPiYOMw4=", "laUbR");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[144]] = lIlIlIIIllIIIlI("ChRfJKUWrBc=", "uIZvb");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[145]] = lIlIlIIIllIIIlI("E9Mp9IpGCgh/SHaDSENf8AipnnsMphlC", "okliJ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[146]] = lIlIlIIIllIIIlI("6Ve68wwk2FCMWohBe9HLYQ==", "Ntdce");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[147]] = lIlIlIIIllIIIlI("lxVISlTkKP7Nljnm+7DUTQ==", "cppFK");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[148]] = lIlIlIIIllIIlIl("JB0ICDI5HQQnLT8ACg==", "PoaxE");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[149]] = lIlIlIIIllIIlIl("BxcRHS4aFx0=", "sexmY");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[150]] = lIlIlIIIllIIIlI("T+xcjAs21XUrvfYzV8Tw5w==", "CVpaW");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[151]] = lIlIlIIIllIIlIl("GjwKPwUMEws+BwA+Cw==", "iLxJf");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[152]] = lIlIlIIIllIlIIl("DS2p37ntDmj5l33a7x+YJg==", "FvpOj");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[153]] = lIlIlIIIllIlIIl("JnTbTNUN5ZjGovfkvscdig==", "FPXBE");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[154]] = lIlIlIIIllIIlIl("NRopJAQ4ERsrCTkWLw==", "VuDIe");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[155]] = lIlIlIIIllIIIlI("7hKfsfdbSjY=", "zrloG");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[156]] = lIlIlIIIllIIIlI("2d0ZPU6OJ9VfumKHRaWTrJPfrjtZDEb+", "yxUDP");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[157]] = lIlIlIIIllIIIlI("zSe2Ag9h8OpUAIhlNmmv9Q==", "EXySg");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[158]] = lIlIlIIIllIIIlI("EgqdJVMP/ys=", "QhnQk");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[159]] = lIlIlIIIllIIIlI("Knuo0jCjHgd6N6kSJjuveg==", "jGLWS");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[160]] = lIlIlIIIllIlIIl("aOfgkkSEnKbBmO5anokwvg==", "eVsIt");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[161]] = lIlIlIIIllIIlIl("OR0nAwM=", "JvRoo");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[162]] = lIlIlIIIllIIIlI("c7CY/o38cB8=", "RXmMw");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[163]] = lIlIlIIIllIlIIl("+qF94JvvTRCxTIXsfNxOgg==", "iVUzO");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[164]] = lIlIlIIIllIIIlI("p2QcAYTYzTOTOfICMZVdKRD/I8mtioDBuzan7cz1e/I=", "Zewqr");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[165]] = lIlIlIIIllIlIIl("1ado4ruez6vafTo2cx6SuhnOpwRhHm7QtSmykxDVUIc=", "VKlFb");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[166]] = lIlIlIIIllIlIIl("ga+IozKHajM5d5wpZ0hqQjxFM5JWcOa/", "TeATz");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[167]] = lIlIlIIIllIIlIl("BysEChUSICwMCBo0Eh0GAysB", "wDsog");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[168]] = lIlIlIIIllIIlIl("KzgVCB8oMRg7EiotCQcCICs=", "OYldv");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[169]] = lIlIlIIIllIlIIl("E7zw9D7KnSAhUaUM1Y/vUXq9TD660OM5NSQAY/QGJms=", "Elbtu");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[170]] = lIlIlIIIllIIlIl("FTAWOwQIOxcXEgs6ESM=", "gUrHp");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[171]] = lIlIlIIIllIIlIl("IDQEERYrHgoRBw==", "QAecb");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[172]] = lIlIlIIIllIlIIl("e9DJzVVCIQs=", "YzRRg");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[173]] = lIlIlIIIllIIlIl("Nw83EQQ8JTQPHyUR", "FzVcp");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[174]] = lIlIlIIIllIlIIl("NZPy3SpUKn5JbbYhCwrTtg==", "azOzO");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[175]] = lIlIlIIIllIIlIl("OyQnMBo7MzwrMygmOjU=", "ZGSYl");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[176]] = lIlIlIIIllIIIlI("j//2mBkO9fE=", "FgIhI");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[177]] = lIlIlIIIllIlIIl("oaQmW3QwfM34QlFeJXcvqiyTV2Fh+fOd", "QVwRF");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[178]] = lIlIlIIIllIIlIl("JQU8BQciFg==", "GdNwn");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[179]] = lIlIlIIIllIIIlI("+CM59KhqjN69XAJzNRF6mg==", "WldjQ");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[180]] = lIlIlIIIllIIlIl("OBcjBQY8GTkx", "PvZZd");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[181]] = lIlIlIIIllIIIlI("zvxLgkmEvCY=", "iWbJX");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[182]] = lIlIlIIIllIlIIl("qAURQaEEEXcz/nASHvT84Q==", "Jvwbi");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[183]] = lIlIlIIIllIIIlI("uiSJ7mFMEY3oz3CMecJawA==", "iZsRG");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[184]] = lIlIlIIIllIlIIl("/t1cW8/AIUC8BZxulcACBA==", "zREcT");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[185]] = lIlIlIIIllIIIlI("4n+aODK7uG6VyM+KhHUnnQ==", "REzLE");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[186]] = lIlIlIIIllIlIIl("XADMUbXDSPAxXaNgWgRBAQ==", "tjvOC");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[187]] = lIlIlIIIllIIIlI("K6Unp7cauEQ=", "nDVrn");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[188]] = lIlIlIIIllIlIIl("IvLclDGU3wJVU/dScBwQIw==", "jONiT");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[189]] = lIlIlIIIllIIlIl("HSQULgkLNCogCw8jBg==", "nPuGg");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[190]] = lIlIlIIIllIlIIl("w2NjGUMv7S2FY2KyhRgVAt0rTMnLX6h2", "wZdMa");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[191]] = lIlIlIIIllIIlIl("JzEfAR02MR8cFQ==", "WCvrp");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[192]] = lIlIlIIIllIIlIl("FC0HFgkGJhIsFwk=", "gHfIe");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[193]] = lIlIlIIIllIlIIl("y5yY7ajD5C5U+Zes9HXpTA==", "vkFTI");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[194]] = lIlIlIIIllIIlIl("LQk1Aj04CTcAByg=", "ZhYnb");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[195]] = lIlIlIIIllIIlIl("MS8hJTEiJCEJNiwkIA==", "CJEzB");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[196]] = lIlIlIIIllIIlIl("GQ8FJiYKBAUKIQQEBCYmHwsICyY=", "kjayU");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[197]] = lIlIlIIIllIIIlI("XTrtB5Hs2ULAjk1LVmF2povz58nQPJmG", "kTRSB");
        Blocks.llllIIllIIlII[Blocks.llllIlIlIllII[198]] = lIlIlIIIllIlIIl("XE2CzR+uci/femuaxjJo2Q==", "jfWPe");
    }
    
    private static Block getRegisteredBlock(final String lllllllllllllIlIllIlIlllllIlllll) {
        return Block.blockRegistry.getObject(new ResourceLocation(lllllllllllllIlIllIlIlllllIlllll));
    }
    
    private static void lIlIlIlIlIIllIl() {
        (llllIlIlIllII = new int[200])[0] = ((0x32 ^ 0x28 ^ (0xCA ^ 0x9C)) & (0xBD ^ 0xB0 ^ (0x6C ^ 0x2D) ^ -" ".length()));
        Blocks.llllIlIlIllII[1] = " ".length();
        Blocks.llllIlIlIllII[2] = "  ".length();
        Blocks.llllIlIlIllII[3] = "   ".length();
        Blocks.llllIlIlIllII[4] = (0x3A ^ 0x3E);
        Blocks.llllIlIlIllII[5] = (0x39 ^ 0x3C);
        Blocks.llllIlIlIllII[6] = (0x6D ^ 0x6B);
        Blocks.llllIlIlIllII[7] = (0x11 ^ 0x23 ^ (0x44 ^ 0x71));
        Blocks.llllIlIlIllII[8] = (0x67 ^ 0x3F ^ (0xEC ^ 0xBC));
        Blocks.llllIlIlIllII[9] = (0xC5 ^ 0x89 ^ (0x73 ^ 0x36));
        Blocks.llllIlIlIllII[10] = (0x38 ^ 0x32);
        Blocks.llllIlIlIllII[11] = (153 + 94 - 197 + 114 ^ 132 + 86 - 183 + 140);
        Blocks.llllIlIlIllII[12] = (0x88 ^ 0x84);
        Blocks.llllIlIlIllII[13] = (0x6D ^ 0x60);
        Blocks.llllIlIlIllII[14] = (0x38 ^ 0x36);
        Blocks.llllIlIlIllII[15] = (0x8 ^ 0x7);
        Blocks.llllIlIlIllII[16] = (0x36 ^ 0x26);
        Blocks.llllIlIlIllII[17] = (0x4D ^ 0x1 ^ (0xDA ^ 0x87));
        Blocks.llllIlIlIllII[18] = (0x86 ^ 0x94);
        Blocks.llllIlIlIllII[19] = (0x3A ^ 0x29);
        Blocks.llllIlIlIllII[20] = (0x7D ^ 0xF ^ (0x6D ^ 0xB));
        Blocks.llllIlIlIllII[21] = (" ".length() ^ (0x9C ^ 0x88));
        Blocks.llllIlIlIllII[22] = (0xA4 ^ 0xB2);
        Blocks.llllIlIlIllII[23] = (0x26 ^ 0x31);
        Blocks.llllIlIlIllII[24] = (0xDB ^ 0xC3);
        Blocks.llllIlIlIllII[25] = (0x44 ^ 0x3F ^ (0xEC ^ 0x8E));
        Blocks.llllIlIlIllII[26] = (0x20 ^ 0x51 ^ (0x35 ^ 0x5E));
        Blocks.llllIlIlIllII[27] = (0x38 ^ 0x23);
        Blocks.llllIlIlIllII[28] = (0x9 ^ 0x47 ^ (0x3F ^ 0x6D));
        Blocks.llllIlIlIllII[29] = (0xD7 ^ 0xB0 ^ (0x32 ^ 0x48));
        Blocks.llllIlIlIllII[30] = (120 + 178 - 181 + 68 ^ 84 + 128 - 95 + 50);
        Blocks.llllIlIlIllII[31] = (0x2E ^ 0x31);
        Blocks.llllIlIlIllII[32] = (0xC ^ 0x2C);
        Blocks.llllIlIlIllII[33] = (0xD5 ^ 0xBE ^ (0xD6 ^ 0x9C));
        Blocks.llllIlIlIllII[34] = (79 + 73 - 69 + 108 ^ 137 + 52 - 60 + 28);
        Blocks.llllIlIlIllII[35] = (0x59 ^ 0x7A);
        Blocks.llllIlIlIllII[36] = (161 + 220 - 362 + 206 ^ 4 + 84 - 45 + 154);
        Blocks.llllIlIlIllII[37] = (0x71 ^ 0x54);
        Blocks.llllIlIlIllII[38] = (0x66 ^ 0x40);
        Blocks.llllIlIlIllII[39] = (19 + 3 + 128 + 6 ^ 83 + 151 - 204 + 157);
        Blocks.llllIlIlIllII[40] = (0x33 ^ 0x65 ^ (0x6E ^ 0x10));
        Blocks.llllIlIlIllII[41] = (0x54 ^ 0x7D);
        Blocks.llllIlIlIllII[42] = (0x2C ^ 0x6);
        Blocks.llllIlIlIllII[43] = (0xD2 ^ 0xC7 ^ (0xA5 ^ 0x9B));
        Blocks.llllIlIlIllII[44] = (0x70 ^ 0x5C);
        Blocks.llllIlIlIllII[45] = (0x2C ^ 0x1);
        Blocks.llllIlIlIllII[46] = (38 + 88 - 113 + 153 ^ 35 + 120 - 129 + 110);
        Blocks.llllIlIlIllII[47] = (0xAF ^ 0xBD ^ (0x9D ^ 0xA0));
        Blocks.llllIlIlIllII[48] = (0xB ^ 0x24 ^ (0x61 ^ 0x7E));
        Blocks.llllIlIlIllII[49] = (0x5A ^ 0x6B);
        Blocks.llllIlIlIllII[50] = (0x81 ^ 0xA0 ^ (0x3E ^ 0x2D));
        Blocks.llllIlIlIllII[51] = (0x59 ^ 0x6A);
        Blocks.llllIlIlIllII[52] = (0x5A ^ 0x6E);
        Blocks.llllIlIlIllII[53] = (0x14 ^ 0x21);
        Blocks.llllIlIlIllII[54] = (0x4 ^ 0xC ^ (0x86 ^ 0xB8));
        Blocks.llllIlIlIllII[55] = (0x3C ^ 0xB);
        Blocks.llllIlIlIllII[56] = (0x54 ^ 0x6C);
        Blocks.llllIlIlIllII[57] = (24 + 46 + 81 + 20 ^ 121 + 138 - 223 + 110);
        Blocks.llllIlIlIllII[58] = (0x5C ^ 0x66);
        Blocks.llllIlIlIllII[59] = (0x72 ^ 0x49);
        Blocks.llllIlIlIllII[60] = (0x24 ^ 0x18);
        Blocks.llllIlIlIllII[61] = (0x1C ^ 0x21);
        Blocks.llllIlIlIllII[62] = (0x75 ^ 0x23 ^ (0x58 ^ 0x30));
        Blocks.llllIlIlIllII[63] = (0x8C ^ 0xB3);
        Blocks.llllIlIlIllII[64] = (0xDD ^ 0xB5 ^ (0x57 ^ 0x7F));
        Blocks.llllIlIlIllII[65] = (0x31 ^ 0x6 ^ (0xB1 ^ 0xC7));
        Blocks.llllIlIlIllII[66] = (0x3E ^ 0x7C);
        Blocks.llllIlIlIllII[67] = (0x39 ^ 0xF ^ (0x4A ^ 0x3F));
        Blocks.llllIlIlIllII[68] = (0xFF ^ 0xBB);
        Blocks.llllIlIlIllII[69] = (0x66 ^ 0x23);
        Blocks.llllIlIlIllII[70] = (" ".length() ^ (0x7F ^ 0x38));
        Blocks.llllIlIlIllII[71] = (162 + 100 - 254 + 217 ^ 49 + 153 - 193 + 157);
        Blocks.llllIlIlIllII[72] = (0x93 ^ 0x89 ^ (0x41 ^ 0x13));
        Blocks.llllIlIlIllII[73] = (0xDB ^ 0xA3 ^ (0x8E ^ 0xBF));
        Blocks.llllIlIlIllII[74] = (0x70 ^ 0x3A);
        Blocks.llllIlIlIllII[75] = (131 + 195 - 254 + 151 ^ 78 + 79 - 113 + 104);
        Blocks.llllIlIlIllII[76] = (0x72 ^ 0x5 ^ (0x9 ^ 0x32));
        Blocks.llllIlIlIllII[77] = (0x13 ^ 0x41 ^ (0xA ^ 0x15));
        Blocks.llllIlIlIllII[78] = (0x9A ^ 0xC3 ^ (0x46 ^ 0x51));
        Blocks.llllIlIlIllII[79] = (0x75 ^ 0x3A);
        Blocks.llllIlIlIllII[80] = (0x6D ^ 0x3D);
        Blocks.llllIlIlIllII[81] = (0x32 ^ 0x10 ^ (0x2B ^ 0x58));
        Blocks.llllIlIlIllII[82] = (6 + 52 + 159 + 5 ^ 129 + 35 - 66 + 42);
        Blocks.llllIlIlIllII[83] = (0x5B ^ 0x42 ^ (0x4A ^ 0x0));
        Blocks.llllIlIlIllII[84] = (0xDF ^ 0x91 ^ (0xE ^ 0x14));
        Blocks.llllIlIlIllII[85] = (0xE9 ^ 0xBC);
        Blocks.llllIlIlIllII[86] = ("   ".length() ^ (0x9 ^ 0x5C));
        Blocks.llllIlIlIllII[87] = (0x37 ^ 0x7D ^ (0xB9 ^ 0xA4));
        Blocks.llllIlIlIllII[88] = (0xB ^ 0x1A ^ (0xE7 ^ 0xAE));
        Blocks.llllIlIlIllII[89] = (0x63 ^ 0x3A);
        Blocks.llllIlIlIllII[90] = (123 + 127 - 159 + 132 ^ 5 + 17 + 41 + 70);
        Blocks.llllIlIlIllII[91] = (0x43 ^ 0x37 ^ (0x8C ^ 0xA3));
        Blocks.llllIlIlIllII[92] = (0x10 ^ 0x4C);
        Blocks.llllIlIlIllII[93] = (0xF8 ^ 0xA5);
        Blocks.llllIlIlIllII[94] = (0x98 ^ 0xC6);
        Blocks.llllIlIlIllII[95] = (0x82 ^ 0xBB ^ (0x6 ^ 0x60));
        Blocks.llllIlIlIllII[96] = (30 + 20 + 29 + 125 ^ 33 + 58 + 56 + 25);
        Blocks.llllIlIlIllII[97] = (0x9B ^ 0x86 ^ (0x27 ^ 0x5B));
        Blocks.llllIlIlIllII[98] = (0x2F ^ 0x4A ^ (0xA6 ^ 0xA1));
        Blocks.llllIlIlIllII[99] = (0xF8 ^ 0xAA ^ (0x82 ^ 0xB3));
        Blocks.llllIlIlIllII[100] = (0x2B ^ 0x40 ^ (0x9E ^ 0x91));
        Blocks.llllIlIlIllII[101] = (0x80 ^ 0xB6 ^ (0x18 ^ 0x4B));
        Blocks.llllIlIlIllII[102] = (0x5D ^ 0x6A ^ (0xEE ^ 0xBF));
        Blocks.llllIlIlIllII[103] = (0x55 ^ 0x32);
        Blocks.llllIlIlIllII[104] = (0x31 ^ 0x59);
        Blocks.llllIlIlIllII[105] = (0xD ^ 0x7B ^ (0x6A ^ 0x75));
        Blocks.llllIlIlIllII[106] = (0xE8 ^ 0x96 ^ (0x70 ^ 0x64));
        Blocks.llllIlIlIllII[107] = (0xE ^ 0x63 ^ (0x17 ^ 0x11));
        Blocks.llllIlIlIllII[108] = (0x20 ^ 0x56 ^ (0x7D ^ 0x67));
        Blocks.llllIlIlIllII[109] = (11 + 144 - 8 + 78 ^ 97 + 18 - 72 + 97);
        Blocks.llllIlIlIllII[110] = (0x7 ^ 0x69);
        Blocks.llllIlIlIllII[111] = (51 + 43 - 4 + 79 ^ 6 + 139 - 19 + 72);
        Blocks.llllIlIlIllII[112] = (0x53 ^ 0x31 ^ (0x16 ^ 0x4));
        Blocks.llllIlIlIllII[113] = (0x35 ^ 0x44);
        Blocks.llllIlIlIllII[114] = (0x7C ^ 0x7B ^ (0xDE ^ 0xAB));
        Blocks.llllIlIlIllII[115] = (0xC ^ 0x65 ^ (0x1D ^ 0x7));
        Blocks.llllIlIlIllII[116] = (220 + 70 - 211 + 162 ^ 14 + 17 + 60 + 42);
        Blocks.llllIlIlIllII[117] = (1 + 122 - 7 + 122 ^ 153 + 40 - 130 + 92);
        Blocks.llllIlIlIllII[118] = (0x8F ^ 0xB6 ^ (0x1F ^ 0x50));
        Blocks.llllIlIlIllII[119] = (0x26 ^ 0x51);
        Blocks.llllIlIlIllII[120] = (0xD0 ^ 0xA8);
        Blocks.llllIlIlIllII[121] = (163 + 27 - 78 + 143 ^ 132 + 77 - 102 + 27);
        Blocks.llllIlIlIllII[122] = (0x2D ^ 0x57);
        Blocks.llllIlIlIllII[123] = (62 + 74 + 31 + 59 ^ 56 + 4 - 38 + 131);
        Blocks.llllIlIlIllII[124] = (179 + 117 - 133 + 68 ^ 76 + 75 - 94 + 98);
        Blocks.llllIlIlIllII[125] = (0x4F ^ 0x32);
        Blocks.llllIlIlIllII[126] = (0xCB ^ 0xAD ^ (0x52 ^ 0x4A));
        Blocks.llllIlIlIllII[127] = (0x27 ^ 0x2A) + (0x31 ^ 0x53) - -(0x15 ^ 0x10) + (0x87 ^ 0x8C);
        Blocks.llllIlIlIllII[128] = (0x14 ^ 0x65) + (0x1D ^ 0xA) - (0x70 ^ 0x1C) + (0x6E ^ 0xA);
        Blocks.llllIlIlIllII[129] = (0xA4 ^ 0xC1) + (0x65 ^ 0x62) - -(0x2C ^ 0x25) + (0x50 ^ 0x5C);
        Blocks.llllIlIlIllII[130] = 46 + 24 - 61 + 121;
        Blocks.llllIlIlIllII[131] = (0x2D ^ 0x63) + (0x3D ^ 0x54) - (0x4D ^ 0x18) + (0x15 ^ 0x34);
        Blocks.llllIlIlIllII[132] = 77 + 98 - 115 + 72;
        Blocks.llllIlIlIllII[133] = (0x4D ^ 0x63) + (0x4D ^ 0xB) - -(0x2 ^ 0x7) + (0x45 ^ 0x49);
        Blocks.llllIlIlIllII[134] = 54 + 29 - 31 + 82;
        Blocks.llllIlIlIllII[135] = 5 + 75 + 25 + 30;
        Blocks.llllIlIlIllII[136] = 122 + 47 - 149 + 116;
        Blocks.llllIlIlIllII[137] = 101 + 80 - 156 + 112;
        Blocks.llllIlIlIllII[138] = (0xDE ^ 0x90) + (0x87 ^ 0x9C) - (0x69 ^ 0x61) + (0xA8 ^ 0x81);
        Blocks.llllIlIlIllII[139] = (0x2D ^ 0x57) + (0x26 ^ 0x47) - (0xE6 ^ 0x98) + (0x37 ^ 0x19);
        Blocks.llllIlIlIllII[140] = 75 + 118 - 168 + 115;
        Blocks.llllIlIlIllII[141] = 85 + 82 - 122 + 96;
        Blocks.llllIlIlIllII[142] = (0x4E ^ 0x43) + (0x1D ^ 0x27) - (0x79 ^ 0x51) + (0x43 ^ 0x2C);
        Blocks.llllIlIlIllII[143] = (0xB7 ^ 0xC6) + (0xE4 ^ 0xB5) - (0x54 ^ 0x60) + " ".length();
        Blocks.llllIlIlIllII[144] = 85 + 50 - 76 + 85;
        Blocks.llllIlIlIllII[145] = (0x56 ^ 0x6) + (0xFD ^ 0x94) - (0x12 ^ 0x44) + (0x30 ^ 0x1E);
        Blocks.llllIlIlIllII[146] = 2 + 26 + 97 + 21;
        Blocks.llllIlIlIllII[147] = (0x6F ^ 0x29) + (116 + 71 - 91 + 38) - (0x38 ^ 0x53) + (0x9A ^ 0xA8);
        Blocks.llllIlIlIllII[148] = (0x4E ^ 0x14) + (0x55 ^ 0x2) - (16 + 152 - 110 + 115) + (68 + 4 + 16 + 56);
        Blocks.llllIlIlIllII[149] = (0x40 ^ 0x1A) + (0x47 ^ 0x7F) - (0x43 ^ 0x2C) + (0x0 ^ 0x72);
        Blocks.llllIlIlIllII[150] = 73 + 141 - 190 + 126;
        Blocks.llllIlIlIllII[151] = (0xF9 ^ 0x98) + "   ".length() - (0x48 ^ 0x15) + (54 + 34 - 72 + 128);
        Blocks.llllIlIlIllII[152] = 129 + 11 - 25 + 37;
        Blocks.llllIlIlIllII[153] = 97 + 152 - 158 + 62;
        Blocks.llllIlIlIllII[154] = 11 + 150 - 65 + 58;
        Blocks.llllIlIlIllII[155] = (0xBD ^ 0xC6) + (0xD7 ^ 0xB0) - (147 + 26 - 141 + 163) + (0x6A ^ 0x16);
        Blocks.llllIlIlIllII[156] = (0x9 ^ 0x4D) + (0x38 ^ 0x27) - (0x5E ^ 0x3E) + (118 + 18 - 66 + 83);
        Blocks.llllIlIlIllII[157] = 50 + 88 + 16 + 3;
        Blocks.llllIlIlIllII[158] = 92 + 57 - 147 + 127 + (0x8D ^ 0xC4) - (26 + 39 + 69 + 13) + (0xDD ^ 0xBA);
        Blocks.llllIlIlIllII[159] = 128 + 154 - 248 + 125;
        Blocks.llllIlIlIllII[160] = 104 + 80 - 134 + 110;
        Blocks.llllIlIlIllII[161] = (0xCA ^ 0x9D) + (0xB ^ 0x23) - (0x53 ^ 0x3E) + (108 + 36 - 130 + 129);
        Blocks.llllIlIlIllII[162] = 23 + 97 - 76 + 118;
        Blocks.llllIlIlIllII[163] = 145 + 23 - 106 + 101;
        Blocks.llllIlIlIllII[164] = (0x17 ^ 0x6D) + (0xDC ^ 0x94) - (0x71 ^ 0xA) + (0x1A ^ 0x47);
        Blocks.llllIlIlIllII[165] = (0x9A ^ 0x8F) + (0x8E ^ 0x8B) - -(0xDA ^ 0x92) + (0x60 ^ 0x23);
        Blocks.llllIlIlIllII[166] = 51 + 97 - 131 + 149;
        Blocks.llllIlIlIllII[167] = (0x50 ^ 0x47) + (59 + 137 - 63 + 6) - (0x3 ^ 0x23) + (0x40 ^ 0x65);
        Blocks.llllIlIlIllII[168] = 105 + 163 - 128 + 28;
        Blocks.llllIlIlIllII[169] = 134 + 19 - 137 + 153;
        Blocks.llllIlIlIllII[170] = 42 + 130 - 45 + 43;
        Blocks.llllIlIlIllII[171] = 76 + 29 - 14 + 80;
        Blocks.llllIlIlIllII[172] = "   ".length() + (0x36 ^ 0x60) - -(0x95 ^ 0x8E) + (0x71 ^ 0x49);
        Blocks.llllIlIlIllII[173] = 116 + 129 - 199 + 122 + (0x15 ^ 0x43) - (47 + 4 + 14 + 66) + (0xA4 ^ 0x96);
        Blocks.llllIlIlIllII[174] = 67 + 148 - 143 + 102;
        Blocks.llllIlIlIllII[175] = 98 + 112 - 154 + 119;
        Blocks.llllIlIlIllII[176] = 96 + 145 - 89 + 3 + (89 + 91 - 71 + 41) - (60 + 119 - 133 + 122) + (0xA8 ^ 0x8F);
        Blocks.llllIlIlIllII[177] = (0x4A ^ 0x44) + (35 + 107 - 68 + 56) - (0x55 ^ 0x17) + (0x75 ^ 0x16);
        Blocks.llllIlIlIllII[178] = 27 + 167 - 67 + 51;
        Blocks.llllIlIlIllII[179] = 24 + 14 + 8 + 133;
        Blocks.llllIlIlIllII[180] = 140 + 169 - 297 + 168;
        Blocks.llllIlIlIllII[181] = 45 + 134 - 157 + 159;
        Blocks.llllIlIlIllII[182] = 44 + 159 - 32 + 11;
        Blocks.llllIlIlIllII[183] = 178 + 8 - 117 + 114;
        Blocks.llllIlIlIllII[184] = (0x4F ^ 0x54) + (0x37 ^ 0x19) - -(0x3B ^ 0x29) + (0x2D ^ 0x70);
        Blocks.llllIlIlIllII[185] = (0x47 ^ 0x63) + (0xB5 ^ 0xA3) - -(0xD9 ^ 0xBA) + (0x4B ^ 0x57);
        Blocks.llllIlIlIllII[186] = 112 + 57 - 77 + 94;
        Blocks.llllIlIlIllII[187] = 92 + 94 - 133 + 96 + (0x15 ^ 0x1F) - (0x80 ^ 0x8F) + (0x17 ^ 0x3C);
        Blocks.llllIlIlIllII[188] = 122 + 50 - 159 + 141 + (0xBC ^ 0x82) - (0x39 ^ 0x1) + (0x8B ^ 0x97);
        Blocks.llllIlIlIllII[189] = 48 + 142 - 121 + 105 + (0x32 ^ 0x3E) - (135 + 123 - 135 + 34) + (70 + 146 - 143 + 87);
        Blocks.llllIlIlIllII[190] = 176 + 185 - 237 + 63 + (0xA2 ^ 0xB2) - (0xB ^ 0x23) + (0x26 ^ 0x3D);
        Blocks.llllIlIlIllII[191] = 169 + 149 - 238 + 111;
        Blocks.llllIlIlIllII[192] = (0xC5 ^ 0xA2) + (66 + 30 - 47 + 90) - (67 + 145 - 159 + 173) + (103 + 67 - 129 + 135);
        Blocks.llllIlIlIllII[193] = (0x2D ^ 0x42) + (28 + 45 + 23 + 31) - (75 + 39 + 69 + 17) + (104 + 75 - 92 + 68);
        Blocks.llllIlIlIllII[194] = 6 + 165 - 135 + 158;
        Blocks.llllIlIlIllII[195] = ((0x32 ^ 0x37) & ~(0xAC ^ 0xA9)) + (0x7F ^ 0x21) - -(0x11 ^ 0x23) + (0xBA ^ 0x89);
        Blocks.llllIlIlIllII[196] = (0x13 ^ 0x6D) + (0x5 ^ 0x11) - (0x53 ^ 0x2F) + (99 + 14 - 46 + 107);
        Blocks.llllIlIlIllII[197] = 70 + 23 - 23 + 118 + (0x70 ^ 0x5C) - (50 + 52 + 28 + 44) + (98 + 47 - 59 + 53);
        Blocks.llllIlIlIllII[198] = 12 + 37 - 33 + 164 + (0x4A ^ 0x28) - (84 + 110 - 101 + 38) + (0x33 ^ 0x0);
        Blocks.llllIlIlIllII[199] = 100 + 11 - 33 + 71 + (0x2D ^ 0x4B) - (0x3 ^ 0x56) + (0x79 ^ 0x58);
    }
    
    private static String lIlIlIIIllIIIlI(final String lllllllllllllIlIllIlIllllIllIIIl, final String lllllllllllllIlIllIlIllllIllIIII) {
        try {
            final SecretKeySpec lllllllllllllIlIllIlIllllIllIlII = new SecretKeySpec(MessageDigest.getInstance("MD5").digest(lllllllllllllIlIllIlIllllIllIIII.getBytes(StandardCharsets.UTF_8)), "Blowfish");
            final Cipher lllllllllllllIlIllIlIllllIllIIll = Cipher.getInstance("Blowfish");
            lllllllllllllIlIllIlIllllIllIIll.init(Blocks.llllIlIlIllII[2], lllllllllllllIlIllIlIllllIllIlII);
            return new String(lllllllllllllIlIllIlIllllIllIIll.doFinal(Base64.getDecoder().decode(lllllllllllllIlIllIlIllllIllIIIl.getBytes(StandardCharsets.UTF_8))), StandardCharsets.UTF_8);
        }
        catch (Exception lllllllllllllIlIllIlIllllIllIIlI) {
            lllllllllllllIlIllIlIllllIllIIlI.printStackTrace();
            return null;
        }
    }
    
    private static String lIlIlIIIllIIlIl(String lllllllllllllIlIllIlIlllllIIIIIl, final String lllllllllllllIlIllIlIlllllIIIIII) {
        lllllllllllllIlIllIlIlllllIIIIIl = (double)new String(Base64.getDecoder().decode(((String)lllllllllllllIlIllIlIlllllIIIIIl).getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);
        final StringBuilder lllllllllllllIlIllIlIlllllIIIlII = new StringBuilder();
        final char[] lllllllllllllIlIllIlIlllllIIIIll = lllllllllllllIlIllIlIlllllIIIIII.toCharArray();
        int lllllllllllllIlIllIlIlllllIIIIlI = Blocks.llllIlIlIllII[0];
        final byte lllllllllllllIlIllIlIllllIllllII = (Object)((String)lllllllllllllIlIllIlIlllllIIIIIl).toCharArray();
        final double lllllllllllllIlIllIlIllllIlllIll = lllllllllllllIlIllIlIllllIllllII.length;
        int lllllllllllllIlIllIlIllllIlllIlI = Blocks.llllIlIlIllII[0];
        while (lIlIlIlIlIIllll(lllllllllllllIlIllIlIllllIlllIlI, (int)lllllllllllllIlIllIlIllllIlllIll)) {
            final char lllllllllllllIlIllIlIlllllIIIlll = lllllllllllllIlIllIlIllllIllllII[lllllllllllllIlIllIlIllllIlllIlI];
            lllllllllllllIlIllIlIlllllIIIlII.append((char)(lllllllllllllIlIllIlIlllllIIIlll ^ lllllllllllllIlIllIlIlllllIIIIll[lllllllllllllIlIllIlIlllllIIIIlI % lllllllllllllIlIllIlIlllllIIIIll.length]));
            "".length();
            ++lllllllllllllIlIllIlIlllllIIIIlI;
            ++lllllllllllllIlIllIlIllllIlllIlI;
            "".length();
            if ("   ".length() == -" ".length()) {
                return null;
            }
        }
        return String.valueOf(lllllllllllllIlIllIlIlllllIIIlII);
    }
}
